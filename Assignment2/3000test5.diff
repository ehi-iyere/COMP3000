*** 3000test.c	2020-10-03 13:51:09.000000000 -0400
--- 3000testP2Q5.c	2020-11-03 19:20:35.020000000 -0500
***************
*** 24,34 ****
  int main(int argc, char *argv[])
  {
          struct stat statbuf;
!         char *fn;
          int fd;
          size_t len, i, count;
          
!         char *data;
  
          if (argc < 2) {
                  if (argc < 1) {
--- 24,35 ----
  int main(int argc, char *argv[])
  {
          struct stat statbuf;
!         char *fn;	
          int fd;
          size_t len, i, count;
          
!         
! 	
  
          if (argc < 2) {
                  if (argc < 1) {
***************
*** 45,81 ****
          if (stat(fn, &statbuf)) {
                  report_error(strerror(errno));
          }
! 
          len = statbuf.st_size;
-         printf("File %s: \n", fn);
-         printf("   inode %ld\n", statbuf.st_ino);
-         printf("  length %ld\n", len);        
  
          if (S_ISREG(statbuf.st_mode)) {
                  fd = open(fn, O_RDONLY);
                  if (fd == -1) {
                          report_error(strerror(errno));
                  }
!                 data = (char *) mmap(NULL, len,
!                                      PROT_READ, MAP_SHARED, fd, 0);
!                 if (data == MAP_FAILED) {
!                         report_error(strerror(errno));
!                 }
! 
!                 count = 0;
!                 for (i=0; i<len; i++) {
!                         if (data[i] == 'a') {
!                                 count++;
!                         }
!                 }
! 
!                 printf(" a count %ld\n", count);
! 
!                 if (munmap(data, len) == -1) {
!                         report_error(strerror(errno));                        
!                 }
!                 close(fd);
!         }
  
          return 0;
  }
--- 46,83 ----
          if (stat(fn, &statbuf)) {
                  report_error(strerror(errno));
          }
! 	
! 	
! 	
          len = statbuf.st_size;
  
+ 	char *buf =  malloc(len * sizeof(char));
+ 
+ 	
+         printf("File %s: \n", fn);
+         printf("\tinode %ld\n", statbuf.st_ino);
+         printf("\tlength %ld\n", len);        
          if (S_ISREG(statbuf.st_mode)) {
                  fd = open(fn, O_RDONLY);
                  if (fd == -1) {
                          report_error(strerror(errno));
                  }
! 	}
! 		
! 	
! 	read(fd, buf, len);
! 	buf[len] ='\0';
! 	count = 0;
! 
!         close(fd);
! 	//printf("%s\n",buf);
! 	for(i=0;i<len;i++){
! 		if(buf[i]=='a'){
! 			count++;
! 		}
! 	}
! 	printf("\ta count %ld\n", count);
! 	free(buf);
  
          return 0;
  }
